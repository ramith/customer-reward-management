/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button } from '@mui/material';
import { Helmet } from 'react-helmet-async';
import Card1Image from 'src/assets/images/3Rewards_Card_1.png';
import VectorImage from 'src/assets/images/3Rewards_Vector.png';
import Vector1Image from 'src/assets/images/3Rewards_Vector_1.png';
import { styled } from '@mui/material/styles';
import ImgImageImage from 'src/assets/images/3Rewards_img.png';
import Img1ImageImage from 'src/assets/images/3Rewards_img_1.png';
import BannerTop from 'src/components/BannerTop/BannerTop';
import CardReward from 'src/components/CardReward/CardReward';
import Footer1 from 'src/components/Footer1/Footer1';
import { Q3RewardsProps } from 'src/types';
import useQ3Rewards from 'src/components/Q3Rewards/useQ3Rewards';

const ScreenDesktop: any = styled('div')(({ theme }: any) => ({
  backgroundColor: theme.palette['Other']['Divider'],
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
}));

const BannerTop1: any = styled(BannerTop)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Banner: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreenMobile' ? `10px` : `10px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
  overflow: `hidden`,
}));

const CardChoreo: any = styled('div')(({ theme }: any) => ({
  backgroundColor: theme.palette['Background']['Background'],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `10px 0px`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Content: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'ScreenMobile' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'ScreenMobile' ? `center` : `flex-start`,
  alignItems: data.currentVariant === 'ScreenMobile' ? `flex-start` : `center`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreenMobile' ? 'unset' : `stretch`,
  flex: `1`,
  margin: `0px`,
}));

const Card1: any = styled('img')({
  height: `109.82px`,
  width: `188px`,
  margin: `0px`,
});

const Details: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'ScreenMobile' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'ScreenMobile' ? `flex-start` : `space-between`,
  alignItems: data.currentVariant === 'ScreenMobile' ? `flex-end` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'ScreenMobile' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'ScreenMobile'
      ? `34px 0px 0px 0px`
      : `0px 0px 0px 34px`,
}));

const Top: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: data.currentVariant === 'ScreenMobile' ? 'unset' : `1`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreenMobile' ? `stretch` : 'unset',
}));

const Text: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TitleTop: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['H5'].fontStyle,
  fontFamily: theme.typography['Typography']['H5'].fontFamily,
  fontWeight: theme.typography['Typography']['H5'].fontWeight,
  fontSize: theme.typography['Typography']['H5'].fontSize,
  letterSpacing: theme.typography['Typography']['H5'].letterSpacing,
  lineHeight: theme.typography['Typography']['H5'].lineHeight,
  textDecoration: theme.typography['Typography']['H5'].textDecoration,
  textTransform: theme.typography['Typography']['H5'].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Points: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `19px 0px 0px 0px`,
});

const AvailablePoints: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Details1: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['H4'].fontStyle,
  fontFamily: theme.typography['Typography']['H4'].fontFamily,
  fontWeight: theme.typography['Typography']['H4'].fontWeight,
  fontSize: theme.typography['Typography']['H4'].fontSize,
  letterSpacing: theme.typography['Typography']['H4'].letterSpacing,
  lineHeight: theme.typography['Typography']['H4'].lineHeight,
  textDecoration: theme.typography['Typography']['H4'].textDecoration,
  textTransform: theme.typography['Typography']['H4'].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Details2: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  width: data.currentVariant === 'ScreenMobile' ? 'unset' : `191px`,
  margin: data.currentVariant === 'ScreenMobile' ? `28px 0px 0px 0px` : `0px`,
  height: data.currentVariant === 'ScreenMobile' ? `42px` : 'unset',
}));

const FeaturedDeals: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
});

const FeaturedTitle: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreenMobile' ? `0px 10px` : `0px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Title1: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['H5'].fontStyle,
  fontFamily: theme.typography['Typography']['H5'].fontFamily,
  fontWeight: theme.typography['Typography']['H5'].fontWeight,
  fontSize: theme.typography['Typography']['H5'].fontSize,
  letterSpacing: theme.typography['Typography']['H5'].letterSpacing,
  lineHeight: theme.typography['Typography']['H5'].lineHeight,
  textDecoration: theme.typography['Typography']['H5'].textDecoration,
  textTransform: theme.typography['Typography']['H5'].textTransform,
  width: `595px`,
  height: `28px`,
  margin: `0px`,
}));

const DealsCards: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreenMobile' ? `10px` : `10px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
  overflow: `hidden`,
}));

const CardRow1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'ScreenMobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const CardChoreo1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  backgroundColor: theme.palette['Background']['Background'],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 4px 0px`,
  flex: data.currentVariant === 'ScreenMobile' ? 'unset' : `1`,
  margin: `0px`,
  overflow: `hidden`,
  alignSelf: data.currentVariant === 'ScreenMobile' ? `stretch` : 'unset',
}));

const Img: any = styled('div')({
  backgroundImage: `url(${ImgImageImage})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `228px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Content1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Details3: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Top1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `28px 0px 0px 0px`,
  overflow: `hidden`,
});

const Vector: any = styled('img')({
  height: `37.5px`,
  width: `33.33px`,
  position: `absolute`,
  left: `8px`,
  top: `6px`,
});

const Text1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TitleTop1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title2: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['H5'].fontStyle,
  fontFamily: theme.typography['Typography']['H5'].fontFamily,
  fontWeight: theme.typography['Typography']['H5'].fontWeight,
  fontSize: theme.typography['Typography']['H5'].fontSize,
  letterSpacing: theme.typography['Typography']['H5'].letterSpacing,
  lineHeight: theme.typography['Typography']['H5'].lineHeight,
  textDecoration: theme.typography['Typography']['H5'].textDecoration,
  textTransform: theme.typography['Typography']['H5'].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame5: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details4: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame41: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const ButtonText: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const CardChoreo2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  backgroundColor: theme.palette['Background']['Background'],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 4px 0px`,
  flex: data.currentVariant === 'ScreenMobile' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'ScreenMobile'
      ? `10px 0px 0px 0px`
      : `0px 0px 0px 10px`,
  overflow: `hidden`,
  alignSelf: data.currentVariant === 'ScreenMobile' ? `stretch` : 'unset',
}));

const Img1: any = styled('div')({
  backgroundImage: `url(${Img1ImageImage})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `228px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Content2: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Details5: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Top2: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon2: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `28px 0px 0px 0px`,
  overflow: `hidden`,
});

const Vector1: any = styled('img')({
  height: `37.5px`,
  width: `33.33px`,
  position: `absolute`,
  left: `8px`,
  top: `6px`,
});

const Text2: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TitleTop2: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title3: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['H5'].fontStyle,
  fontFamily: theme.typography['Typography']['H5'].fontFamily,
  fontWeight: theme.typography['Typography']['H5'].fontWeight,
  fontSize: theme.typography['Typography']['H5'].fontSize,
  letterSpacing: theme.typography['Typography']['H5'].letterSpacing,
  lineHeight: theme.typography['Typography']['H5'].lineHeight,
  textDecoration: theme.typography['Typography']['H5'].textDecoration,
  textTransform: theme.typography['Typography']['H5'].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame51: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details6: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame42: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const ButtonText1: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const AllRewards: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 100px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
});

const FeaturedTitle1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'ScreenMobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreenMobile' ? `0px 20px` : `0px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Title4: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['H5'].fontStyle,
  fontFamily: theme.typography['Typography']['H5'].fontFamily,
  fontWeight: theme.typography['Typography']['H5'].fontWeight,
  fontSize: theme.typography['Typography']['H5'].fontSize,
  letterSpacing: theme.typography['Typography']['H5'].letterSpacing,
  lineHeight: theme.typography['Typography']['H5'].lineHeight,
  textDecoration: theme.typography['Typography']['H5'].textDecoration,
  textTransform: theme.typography['Typography']['H5'].textTransform,
  width: `595px`,
  height: `28px`,
  margin: `0px`,
}));

const DealsCards1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreenMobile' ? `10px 20px` : `10px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
  overflow: `hidden`,
}));

const CardRow11: any = styled('div')({
  borderRadius: `0px`,
  display: `grid`,
  position: `relative`,
  isolation: `isolate`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  height: `auto`,
  gridTemplateColumns: `repeat(auto-fit, minmax(310px, 1fr))`,
  columnGap: `20px`,
  rowGap: `20px`,
  width: `100%`,
});

const CardReward1: any = styled(CardReward, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  flex: data.currentVariant === 'ScreenMobile' ? 'unset' : `1`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreenMobile' ? `stretch` : 'unset',
}));

const Footer11: any = styled(Footer1)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
}));

function Q3Rewards(props: Q3RewardsProps): JSX.Element {
  const { data } = useQ3Rewards();

  return (
    <ScreenDesktop className={props.className}>
      <Helmet>
        <title>Redeem Rewards</title>
      </Helmet>
      <BannerTop1 />
      <Banner data={data}>
        <CardChoreo>
          <Content data={data}>
            <Card1 src={Card1Image} loading="lazy" alt={'Card 1'} />
            <Details data={data}>
              <Top data={data}>
                <Text>
                  <TitleTop>
                    <Title>{`Horizon Loyalty Rewards`}</Title>
                  </TitleTop>
                  <Points>
                    <AvailablePoints>
                      <Details1>{`3760`}</Details1>
                      <Details2>{`Available Points`}</Details2>
                    </AvailablePoints>
                  </Points>
                </Text>
              </Top>
              <Frame4 data={data}></Frame4>
            </Details>
          </Content>
        </CardChoreo>
      </Banner>
      <FeaturedDeals>
        <FeaturedTitle data={data}>
          <Title1>{`Featured rewards for you`}</Title1>
        </FeaturedTitle>
        <DealsCards data={data}>
          <CardRow1 data={data}>
            <CardChoreo1 data={data}>
              <Img></Img>
              <Content1>
                <Details3>
                  <Top1>
                    {false && (
                      <Icon1>
                        <Vector
                          src={VectorImage}
                          loading="lazy"
                          alt={'Vector'}
                        />
                      </Icon1>
                    )}
                    <Text1>
                      <TitleTop1>
                        <Title2>{`5% cash back on travel`}</Title2>
                      </TitleTop1>
                      <Frame5>
                        <Details4>
                          {`Earn unlimited 5% cash back on travel purchased through Horizon, including flights, hotels, car rentals, cruises and more.`}
                        </Details4>
                      </Frame5>
                    </Text1>
                  </Top1>
                  <Frame41>
                    <ButtonText
                      variant="text"
                      size={'large'}
                      color={'primary'}
                      disabled={false}
                      data={data}
                    >
                      {'LEARN MORE'}
                    </ButtonText>
                  </Frame41>
                </Details3>
              </Content1>
            </CardChoreo1>
            <CardChoreo2 data={data}>
              <Img1></Img1>
              <Content2>
                <Details5>
                  <Top2>
                    {false && (
                      <Icon2>
                        <Vector1
                          src={Vector1Image}
                          loading="lazy"
                          alt={'Vector'}
                        />
                      </Icon2>
                    )}
                    <Text2>
                      <TitleTop2>
                        <Title3>{`Love a good deal?`}</Title3>
                      </TitleTop2>
                      <Frame51>
                        <Details6>
                          {`Visit the Horizon Rewards Deals Page where you can find our current gift card deals and online shopping offers.`}
                        </Details6>
                      </Frame51>
                    </Text2>
                  </Top2>
                  <Frame42>
                    <ButtonText1
                      variant="text"
                      size={'large'}
                      color={'primary'}
                      disabled={false}
                      data={data}
                    >
                      {'LEARN MORE'}
                    </ButtonText1>
                  </Frame42>
                </Details5>
              </Content2>
            </CardChoreo2>
          </CardRow1>
        </DealsCards>
      </FeaturedDeals>
      <AllRewards>
        <FeaturedTitle1 data={data}>
          <Title4>{`All Rewards`}</Title4>
        </FeaturedTitle1>
        <DealsCards1 data={data}>
          <CardRow11>
            {data.rewards &&
              data.rewards.map((reward: any, index: number) => {
                return <CardReward1 key={index} data={data} reward={reward} />;
              })}
          </CardRow11>
        </DealsCards1>
      </AllRewards>
      <Footer11 />
    </ScreenDesktop>
  );
}

export default Q3Rewards;
