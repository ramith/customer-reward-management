/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Link as MUILink } from '@mui/material';
import HorizonLogoImage from 'src/assets/images/Footer1_Horizon_Logo.png';
import { styled } from '@mui/material/styles';
import { Footer1Props } from 'src/types';
import useFooter1 from 'src/components/Footer1/useFooter1';

const ScreenDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  backgroundColor: theme.palette['Background']['Background'],
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'ScreenTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreenMobile'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
}));

const FooterContent: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 50px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 0px`
      : `30px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const FooterCentered: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'ScreenMobile' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'ScreenMobile' ? `flex-start` : `space-between`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet' ? `50px 50px 0px 50px` : `0px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreenMobile' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const Social: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const LogoFooter: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const HorizonLogo: any = styled('img')({
  height: `34.49px`,
  width: `206.49px`,
  margin: `0px`,
});

const SocialLinks: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 0px 0px 0px`
      : `33px 0px 0px 0px`,
  overflow: `hidden`,
}));

const Social1: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px`,
}));

const Link1: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link2: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link3: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link4: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link5: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Column1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `54px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `58px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: data.currentVariant === 'ScreenMobile' ? `38px 0px 0px 0px` : `0px`,
}));

const Links1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Product: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px`,
}));

const Link6: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link7: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link8: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link9: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link10: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link11: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Column2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'ScreenMobile' ? `row` : `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `54px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `58px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: data.currentVariant === 'ScreenMobile' ? `38px 0px 0px 0px` : `0px`,
}));

const Link21: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  overflow: `hidden`,
});

const Compare: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px`,
}));

const Link12: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link13: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link14: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link15: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link16: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link31: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreenMobile'
      ? `0px 0px 0px 66px`
      : `28px 0px 0px 0px`,
  overflow: `hidden`,
}));

const Company: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px`,
}));

const Link17: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link18: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Column3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'ScreenMobile' ? `row` : `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `54px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `58px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: data.currentVariant === 'ScreenMobile' ? `38px 0px 0px 0px` : `0px`,
}));

const Link41: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width: data.currentVariant === 'ScreenMobile' ? `110px` : 'unset',
}));

const Community: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `119px`,
  margin: `0px`,
}));

const Link19: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link20: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Links5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreenMobile'
      ? `0px 0px 0px 72px`
      : `28px 0px 0px 0px`,
  overflow: `hidden`,
}));

const Terms: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px`,
}));

const Link22: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const Link23: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `8px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

const MadeWith: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `54px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Line: any = styled('div')(({ theme }: any) => ({
  backgroundColor: theme.palette['Other']['Divider'],
  borderRadius: `0px`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `0px`,
}));

const Group6: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `15px 0px 0px 0px`,
  overflow: `hidden`,
});

const FooterSaying: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'ScreenTablet'
      ? `center`
      : data.currentVariant === 'ScreenMobile'
      ? `center`
      : `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Copyright: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 3'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 3'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 3'].fontWeight,
  fontSize: theme.typography['Typography']['Body 3'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 3'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 3'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 3'].textDecoration,
  textTransform: theme.typography['Typography']['Body 3'].textTransform,
  margin: `0px`,
}));

function Footer1(props: Footer1Props): JSX.Element {
  const { data } = useFooter1();

  return (
    <ScreenDesktop className={props.className} data={data}>
      <FooterContent data={data}>
        <FooterCentered data={data}>
          <Social>
            <LogoFooter>
              <HorizonLogo
                src={HorizonLogoImage}
                loading="lazy"
                alt={'Horizon Logo'}
              />
            </LogoFooter>
          </Social>
        </FooterCentered>
      </FooterContent>
      <MadeWith>
        <Line></Line>
        <Group6>
          <FooterSaying data={data}>
            <Copyright>{`© 2023 Your company. All rights reserved.`}</Copyright>
          </FooterSaying>
        </Group6>
      </MadeWith>
    </ScreenDesktop>
  );
}

export default Footer1;
